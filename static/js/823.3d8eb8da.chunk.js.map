{"version":3,"file":"static/js/823.3d8eb8da.chunk.js","mappings":"+SAEMA,EAAM,4CACZC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAW,mCAAG,oGACFD,EAAAA,EAAAA,IAAA,6BAAgCD,IAD9B,cACnBG,EADmB,yBAElBA,EAASC,KAAKC,QAAQC,KAAI,YAC/B,MAAO,CACLC,GAFgD,EAAhBA,GAGhCC,MAHgD,EAAZA,MAKvC,KAPwB,2CAAH,qDAUXC,EAAe,mCAAG,WAAMC,GAAN,uFACNT,EAAAA,EAAAA,IAAA,iBAAoBS,GAApB,OAA8BV,EAA9B,oBADM,cACvBG,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfO,EAAY,mCAAG,WAAMC,GAAN,uFACHX,EAAAA,EAAAA,IAAA,uBACLD,EADK,kBACQY,EADR,2BADG,cACpBT,EADoB,yBAInBA,EAASC,KAAKC,QAAQC,KAAI,YAC/B,MAAO,CACLC,GAFgD,EAAhBA,GAGhCC,MAHgD,EAAZA,MAKvC,KATyB,2CAAH,sDAcZK,EAAe,mCAAG,WAAMH,GAAN,uFACJT,EAAAA,EAAAA,IAAA,iBACXS,EADW,mBACOV,EADP,2BADI,cACrBG,EADqB,yBAIpBA,EAASC,KAAKC,QAAQC,KAAI,YAC/B,MAAO,CACLQ,OAF0D,EAA1BA,OAGhCC,QAH0D,EAAlBA,QAIxCR,GAJ0D,EAATA,GAMpD,KAV0B,2CAAH,sDAcbS,EAAe,mCAAG,WAAMN,GAAN,uFACRT,EAAAA,EAAAA,IAAA,iBACXS,EADW,mBACOV,EADP,oBADQ,cACzBG,EADyB,yBAKxBA,EAASC,KAAKa,MALU,2CAAH,qD,iGC7CjBC,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3B,OACE,0BACE,wBACGA,EAAOb,KAAI,SAAAc,GAAK,OACf,yBAAmB,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAMb,IAAnB,SAA0Ba,EAAMZ,SAA1CY,EAAMb,GADA,OAMxB,E,kBCeD,EAxBgB,WACd,OAA4Be,EAAAA,EAAAA,UAAS,IAArC,eAAOH,EAAP,KAAeI,EAAf,KAUA,OACE,4BAEE,kBAAMC,SAXW,SAAAC,GACnBA,EAAEC,iBACF,IAAMd,EAAca,EAAEE,OAAOC,SAASC,OAAOC,OAE5CnB,EAAAA,EAAAA,IAAaC,GAAamB,MAAK,SAAA3B,GAAI,OAAImB,EAAUnB,EAAd,GAErC,EAKG,WACE,kBAAO4B,KAAK,SAASC,KAAK,UAC1B,mBAAQA,KAAK,SAAb,SAAsB,eAExB,SAACf,EAAD,CAAYC,OAASA,MAG1B,C","sources":["components/api/api.js","components/RenderList/RenderList.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '?api_key=6a9a83cfb600dbd7747b45c5dc18162e';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day${KEY}`);\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}${KEY}&language=en-US`);\n  return response.data;\n};\n\nexport const searchMovies = async searchValue => {\n  const response = await axios.get(\n    `/search/movie${KEY}&query=${searchValue}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\n\n\nexport const getMovieReviews = async movieId => {\n    const response = await axios.get(\n      `/movie/${movieId}/reviews${KEY}&language=en-US&page=1`\n    );\n    return response.data.results.map(({ author, content, id }) => {\n      return {\n        author,\n        content,\n        id,\n      };\n    });\n  };\n  \n\n  export const getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits${KEY}&language=en-US`\n  );\n\n  return response.data.cast\n  // return response.data.results.map(({ name, character, profile_path, id }) => {\n  //   return {\n  //     name,\n  //     character,\n  //     profile_path,\n  //     id,\n  //   };\n  // });\n};\n","import { Link } from \"react-router-dom\";\n\n\nexport const RenderList = ({ movies }) => {\n  return (\n    <div>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}><Link to={`${movie.id}`}>{movie.title}</Link></li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import  {RenderList} from 'components/RenderList/RenderList';\nimport { searchMovies } from 'components/api/api';\nimport { useState } from 'react';\n\n const Movies = () => {\n  const [movies, setMovies] = useState([]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const searchValue = e.target.elements.search.value;\n    \n     searchMovies(searchValue).then(data => setMovies(data));\n     \n  };\n\n  return (\n    <div>\n       \n      <form onSubmit={handleSubmit}>\n        <input name=\"search\" type=\"text\" />\n        <button type=\"submit\">Search</button>\n      </form> \n      <RenderList movies={ movies }/>\n    </div>\n  );\n};\n\n\nexport default Movies;"],"names":["KEY","axios","getTrending","response","data","results","map","id","title","getMovieDetails","movieId","searchMovies","searchValue","getMovieReviews","author","content","getMovieCredits","cast","RenderList","movies","movie","to","useState","setMovies","onSubmit","e","preventDefault","target","elements","search","value","then","name","type"],"sourceRoot":""}