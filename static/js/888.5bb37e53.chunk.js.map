{"version":3,"file":"static/js/888.5bb37e53.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","components/api/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MovieDetails_wrapper__cJixg\",\"btn\":\"MovieDetails_btn__tCU2l\",\"img\":\"MovieDetails_img__D3WH9\",\"title\":\"MovieDetails_title__RBndM\",\"overview\":\"MovieDetails_overview__EVogb\",\"description\":\"MovieDetails_description__n2kBz\",\"info\":\"MovieDetails_info__0TKY1\"};","import { getMovieDetails } from 'components/api/api';\nimport { useParams } from 'react-router-dom';\nimport { useState, useRef } from 'react';\nimport css from './MovieDetails.module.css';\n\nimport { Link, Outlet, useLocation } from 'react-router-dom';\n\n const MovieDetails = () => {\n  const [details, setDetails] = useState([]);\n  const { movieId } = useParams();\n\n  const location = useLocation();\n\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  getMovieDetails(movieId).then(data => setDetails(data));\n\n  return (\n    <div className={css.wrapper}>\n      <div>\n        \n        <button className={css.btn}>\n          <Link to={backLinkHref.current}>Go back</Link>\n        </button>\n        {details.poster_path ? (\n          <img\n            className={css.img}\n            src={`https://image.tmdb.org/t/p/w300_and_h450_bestv2${details.poster_path}`}\n            alt=\"movie poster\"\n          ></img>\n        ) : (\n          ''\n        )}\n      </div>\n      <div>\n        <h5 className={css.title}>\n          {details.title}{' '}\n          {details.release_date ? details.release_date.substring(0, 4) : ''}\n        </h5>\n\n        <p className={css.description}>User score: {details.vote_average}</p>\n\n        <h6 className={css.overview}>Overviews</h6>\n        <p className={css.description}>{details.overview}</p>\n\n        <h6 className={css.overview}>Genres</h6>\n        {details.genres && details.genres.length > 0 ? (\n          <p className={css.description}>\n            {details.genres.map(genre => genre.name).join(', ')}\n          </p>\n        ) : (\n          <p className={css.description}>No genres available</p>\n        )}\n      </div>\n\n      <div className={css.info}>\n        <h6 className={css.description}>Additional information</h6>\n        <ul>\n          <li>\n            {' '}\n            <Link to=\"reviews\"> Reviews </Link>\n          </li>\n\n          <li>\n            <Link to=\"cast\"> Cast </Link>\n          </li>\n        </ul>\n      </div>\n\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst KEY = '?api_key=6a9a83cfb600dbd7747b45c5dc18162e';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day${KEY}`);\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}${KEY}&language=en-US`);\n  return response.data;\n};\n\nexport const searchMovies = async searchValue => {\n  const response = await axios.get(\n    `/search/movie${KEY}&query=${searchValue}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\n\n\nexport const getMovieReviews = async movieId => {\n    const response = await axios.get(\n      `/movie/${movieId}/reviews${KEY}&language=en-US&page=1`\n    );\n    return response.data.results.map(({ author, content, id }) => {\n      return {\n        author,\n        content,\n        id,\n      };\n    });\n  };\n  \n\n  export const getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits${KEY}&language=en-US`\n  );\n\n  return response.data.cast\n  // return response.data.results.map(({ name, character, profile_path, id }) => {\n  //   return {\n  //     name,\n  //     character,\n  //     profile_path,\n  //     id,\n  //   };\n  // });\n};\n"],"names":["useState","details","setDetails","movieId","useParams","location","useLocation","backLinkHref","useRef","state","from","getMovieDetails","then","data","className","css","to","current","poster_path","src","alt","title","release_date","substring","vote_average","overview","genres","length","map","genre","name","join","KEY","axios","getTrending","response","results","id","searchMovies","searchValue","getMovieReviews","author","content","getMovieCredits","cast"],"sourceRoot":""}